{"version":3,"sources":["userCard/userCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserCard","props","className","src","avatar","alt","first_name","last_name","email","App","useState","users","setUsers","useEffect","fetch","then","json","data","map","user","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA0BeA,MAjBf,SAAkBC,GACd,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,OAAQC,IAAI,cAAcH,UAAU,kBAEzD,qBAAKA,UAAU,iBAAf,SACKD,EAAMK,WAAa,IAAML,EAAMM,YAGpC,qBAAKL,UAAU,kBAAf,SACKD,EAAMO,YC0BRC,MAlCf,WAAgB,IAAD,EAEaC,mBAA0B,IAFvC,mBAENC,EAFM,KAECC,EAFD,KAqBb,OAhBAC,qBAAU,WACRC,MAAM,+BACHC,MAAK,SAAAJ,GAAK,OAAIA,EAAMK,UACpBD,MAAK,SAACJ,GACLC,EAASD,EAAMM,WAElB,IAWD,qBAAKf,UAAU,MAAf,gBACGS,QADH,IACGA,OADH,EACGA,EAAOO,KAAI,SAACC,GACX,OACE,qBAAmBjB,UAAU,oBAA7B,SACE,cAAC,EAAD,eAAciB,KADNA,EAAKC,UCvBVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.28408705.chunk.js","sourcesContent":["import React from 'react';\n\ninterface UserCardInterface {\n    avatar: string,\n    first_name: string,\n    last_name: string,\n    email: string\n}\n\nfunction UserCard(props: UserCardInterface) {\n    return (\n        <div className=\"user-card\">\n            <div className=\"user-card-avatar\">\n                <img src={props?.avatar} alt=\"user-avatar\" className=\"user-avatar\" />\n            </div>\n            <div className=\"user-card-name\">\n                {props.first_name + ' ' + props.last_name}\n            </div>\n\n            <div className=\"user-card-email\">\n                {props.email}\n            </div>\n        </div>\n    )\n}\n\nexport default UserCard;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport UserCard from './userCard/userCard';\n\ninterface UserInterface {\n  avatar: string,\n  email: string,\n  first_name: string,\n  id: number,\n  last_name: string\n}\n\nfunction App() {\n\n  const [users, setUsers] = useState<UserInterface[]>([]);\n  // const [user, setUser] = useState<UserInterface | null>(null);\n\n  useEffect(() => {\n    fetch(\"https://reqres.in/api/users\")\n      .then(users => users.json())\n      .then((users: any) => {\n        setUsers(users.data);\n      })\n  }, []);\n\n  // const handleClick = (user: UserInterface) => {\n  //   setUser(user);\n  // }\n\n  // const handleBack = () => {\n  //   setUser(null);\n  // }\n\n  return (\n    <div className=\"App\">\n      {users?.map((user: UserInterface) => {\n        return (\n          <div key={user.id} className=\"user-card-wrapper\">\n            <UserCard {...user}></UserCard>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}